{:rename-macros {}, :renames {}, :use-macros {deftest devcards.core, defcard devcards.core}, :excludes #{}, :name user-mgmt.core, :imports nil, :requires {sab sablono.core, sablono.core sablono.core}, :uses nil, :defs {app-state {:name user-mgmt.core/app-state, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 10, :column 1, :end-line 10, :end-column 19, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 10, :column 10, :end-line 10, :end-column 19}}, get-input-interface {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 13, :column 7, :end-line 13, :end-column 26, :arglists (quote ([state]))}, :name user-mgmt.core/get-input-interface, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 26, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, add-user {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 32, :column 7, :end-line 32, :end-column 15, :arglists (quote ([state]))}, :name user-mgmt.core/add-user, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 15, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, main {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 45, :column 7, :end-line 45, :end-column 11, :arglists (quote ([]))}, :name user-mgmt.core/main, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {dc devcards.core, devcards.core devcards.core, sab sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:new-user :users}, :order [:users :new-user]}, :doc nil}