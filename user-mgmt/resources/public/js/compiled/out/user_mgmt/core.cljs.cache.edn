{:rename-macros {}, :renames {}, :use-macros {deftest devcards.core, defcard devcards.core}, :excludes #{}, :name user-mgmt.core, :imports nil, :requires {sab sablono.core, sablono.core sablono.core}, :uses nil, :defs {decrement-point {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 23, :column 8, :end-line 23, :end-column 23, :arglists (quote ([state index]))}, :name user-mgmt.core/decrement-point, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 23, :method-params ([state index]), :protocol-impl nil, :arglists-meta (nil nil), :column 2, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state index]))}, add-user {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 12, :column 7, :end-line 12, :end-column 15, :arglists (quote ([state]))}, :name user-mgmt.core/add-user, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 15, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, main {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 107, :column 7, :end-line 107, :end-column 11, :arglists (quote ([]))}, :name user-mgmt.core/main, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-input-interface {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 61, :column 7, :end-line 61, :end-column 26, :arglists (quote ([state]))}, :name user-mgmt.core/get-input-interface, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 26, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, sort-user {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 16, :column 7, :end-line 16, :end-column 16, :arglists (quote ([state]))}, :name user-mgmt.core/sort-user, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 16, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, delete-user {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 27, :column 8, :end-line 27, :end-column 19, :arglists (quote ([state index]))}, :name user-mgmt.core/delete-user, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 19, :method-params ([state index]), :protocol-impl nil, :arglists-meta (nil nil), :column 2, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state index]))}, get-interface {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 77, :column 7, :end-line 77, :end-column 20, :arglists (quote ([state]))}, :name user-mgmt.core/get-interface, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, increment-point {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 19, :column 8, :end-line 19, :end-column 23, :arglists (quote ([state index]))}, :name user-mgmt.core/increment-point, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 23, :method-params ([state index]), :protocol-impl nil, :arglists-meta (nil nil), :column 2, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state index]))}, render-app {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 93, :column 9, :end-line 93, :end-column 19, :arglists (quote ([state node])), :doc "Render the UI on DOM node, according to state: UI=f(S)."}, :name user-mgmt.core/render-app, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 19, :method-params ([state node]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 93, :end-line 93, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state node])), :doc "Render the UI on DOM node, according to state: UI=f(S)."}, list-users {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 56, :column 7, :end-line 56, :end-column 17, :arglists (quote ([state]))}, :name user-mgmt.core/list-users, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, list-user {:protocol-inline nil, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 30, :column 7, :end-line 30, :end-column 16, :arglists (quote ([state index user]))}, :name user-mgmt.core/list-user, :variadic false, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :end-column 16, :method-params ([state index user]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state index user]))}, app-state {:name user-mgmt.core/app-state, :file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 10, :column 1, :end-line 10, :end-column 19, :meta {:file "/Users/palo/ClosjureScript/user-mgmt/src/user_mgmt/core.cljs", :line 10, :column 10, :end-line 10, :end-column 19}}}, :require-macros {dc devcards.core, devcards.core devcards.core, sab sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:name :render :point :new-user :users}, :order [:users :new-user :name :point :render]}, :doc nil}